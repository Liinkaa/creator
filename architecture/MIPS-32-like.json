{
  "components": [
    {
      "name": "Control registers",
      "type": "control",
      "double_precision": false,
      "elements": [
        {
          "name": "PC",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "EPC",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "CAUSE",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "BADVADDR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "STATUS",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "HI",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "LO",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FIR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FCSR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FCCR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FEXR",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "Integer registers",
      "type": "integer",
      "double_precision": false,
      "elements": [
        {
          "name": "r0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "at",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "v0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "v1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a2",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "a3",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t2",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t3",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t4",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t5",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t6",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t7",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s2",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s3",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s4",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s5",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s6",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s7",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t8",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "t9",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "k0",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "k1",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "gp",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "sp",
          "nbits": "32",
          "value": "268435452",
          "default_value": "268435452",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "s8",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "ra",
          "nbits": "32",
          "value": "0",
          "default_value": "0",
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "Simple floating point registers",
      "type": "floating point",
      "double_precision": false,
      "elements": [
        {
          "name": "FG0",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG1",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG2",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG3",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG4",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG5",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG6",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG7",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG8",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG9",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG10",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG11",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG12",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG13",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG14",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG15",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG16",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG17",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG18",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG19",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG20",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG21",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG22",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG23",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG24",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG25",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG26",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG27",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG28",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG29",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG30",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FG31",
          "nbits": "32",
          "value": 0,
          "default_value": 0,
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "Double floating point registers",
      "type": "floating point",
      "double_precision": true,
      "elements": [
        {
          "name": "FP0",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG0",
            "FG1"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP2",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG2",
            "FG3"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP4",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG4",
            "FG5"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP6",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG6",
            "FG7"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP8",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG8",
            "FG9"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP10",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG10",
            "FG11"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP12",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG12",
            "FG13"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP14",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG14",
            "FG15"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP16",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG16",
            "FG17"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP18",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG18",
            "FG19"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP20",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG20",
            "FG21"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP22",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG22",
            "FG23"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP24",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG24",
            "FG25"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP26",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG26",
            "FG27"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP28",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG28",
            "FG29"
          ],
          "properties": [
            "read",
            "write"
          ]
        },
        {
          "name": "FP30",
          "nbits": "64",
          "value": 0,
          "simple_reg": [
            "FG30",
            "FG31"
          ],
          "properties": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "instructions": [
    {
      "name": "abs.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "abs.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "abs.s $fd $fs",
      "co": "010001",
      "cop": "00000000101",
      "nwords": 1,
      "fields": [
        {
          "name": "abs.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000101"
        }
      ],
      "definition": "fd = Math.abs(fs)"
    },
    {
      "name": "abs.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "abs.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "abs.d $fd $fs",
      "co": "010001",
      "cop": "00001000101",
      "nwords": 1,
      "fields": [
        {
          "name": "abs.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000101"
        }
      ],
      "definition": "fd = Math.abs(fs)"
    },
    {
      "name": "add",
      "type": "Arithmetic integer",
      "co": "000000",
      "cop": "100000",
      "nwords": 1,
      "signature_definition": "F0 $F3 $F2 $F1",
      "signature": "add,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "add $reg3 $reg2 $reg1",
      "fields": [
        {
          "name": "add",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100000"
        }
      ],
      "definition": "assert(((reg1 >> 0) >= 0 && (reg2 >> 0) <= 0) || ((reg1 >> 0) <= 0 && (reg2 >> 0) >= 0) || ((reg1 >> 0) > 0 && (reg2 >> 0) > 0 && (((reg1 >> 0) + (reg2 >> 0)) >> 0) > 0) || ((reg1 >> 0) < 0 && (reg2 >> 0) < 0 && (((reg1 >> 0) + (reg2 >> 0)) >> 0) < 0); \"Integer Overflow\")\nreg3=reg1+reg2;\ncheck_stack_limit(reg3.name; sp.name; reg3)"
    },
    {
      "name": "add.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "add.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "add.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000000",
      "nwords": 1,
      "fields": [
        {
          "name": "add.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "add",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000000"
        }
      ],
      "definition": "fd = fs + ft"
    },
    {
      "name": "add.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "add.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "add.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000000",
      "nwords": 1,
      "fields": [
        {
          "name": "add.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "add",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000000"
        }
      ],
      "definition": "fd = fs + ft"
    },
    {
      "name": "addi",
      "type": "Arithmetic integer",
      "co": "001000",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "addi,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "addi $reg2 $reg1 val",
      "fields": [
        {
          "name": "addi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "assert(((reg1 >> 0) >= 0 && (val >> 0) <= 0) || ((reg1 >> 0) <= 0 && (val >> 0) >= 0) || ((reg1 >> 0) > 0 && (val >> 0) > 0 && (((reg1 >> 0) + (val >> 0)) >> 0) > 0) || ((reg1 >> 0) < 0 && (val >> 0) < 0 && (((reg1 >> 0) + (val >> 0)) >> 0) < 0); \"Integer Overflow\")\nreg2=reg1+val;\ncheck_stack_limit(reg2.name; sp.name; reg2);"
    },
    {
      "name": "addiu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "addiu,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "addiu $reg2 $reg1 val",
      "co": "001001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "addiu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg2=reg1+val;\ncheck_stack_limit(reg2.name; sp.name; reg2)"
    },
    {
      "name": "addu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "addu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "addu $reg3 $reg1 $reg2",
      "co": "000000",
      "cop": "100001",
      "nwords": 1,
      "fields": [
        {
          "name": "addu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100001"
        }
      ],
      "definition": "reg3=reg1+reg2;\ncheck_stack_limit(reg3.name; sp.name; reg3)"
    },
    {
      "name": "and",
      "type": "Logic",
      "co": "000000",
      "cop": "100100",
      "nwords": 1,
      "signature_definition": "F0 $F3 $F2 $F1",
      "signature": "and,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "and $reg3 $reg2 $reg1",
      "fields": [
        {
          "name": "and",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100100"
        }
      ],
      "definition": "reg3=reg1&reg2;\ncheck_stack_limit(reg3.name; sp.name; reg3)"
    },
    {
      "name": "andi",
      "type": "Logic",
      "co": "001100",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "andi,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "andi $reg2 $reg1 val",
      "fields": [
        {
          "name": "andi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg2=reg1&(val>>>0);\ncheck_stack_limit(reg2.name; sp.name; reg2)"
    },
    {
      "name": "b",
      "type": "Unconditional bifurcation",
      "co": "000100",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 F1",
      "signature": "b,inm",
      "signatureRaw": "b off",
      "fields": [
        {
          "name": "b",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "PC=PC+((off << 16) >> 14)"
    },
    {
      "name": "bc",
      "type": "Unconditional bifurcation",
      "signature_definition": "F0 F1",
      "signature": "bc,inm",
      "signatureRaw": "bc off",
      "co": "110010",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "bc",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 25,
          "stopbit": 0
        }
      ],
      "definition": "PC=PC+((off << 6) >> 4)"
    },
    {
      "name": "bc1eqz",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F2 F3",
      "signature": "bc1eqz,$SFP-Reg,inm",
      "signatureRaw": "bc1eqz $ft off",
      "co": "010001",
      "cop": "01001",
      "nwords": 1,
      "fields": [
        {
          "name": "bc1eqz",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "01001"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(ft==0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bc1nez",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F2 F3",
      "signature": "bc1nez,$SFP-Reg,inm",
      "signatureRaw": "bc1nez $ft off",
      "co": "010001",
      "cop": "01101",
      "nwords": 1,
      "fields": [
        {
          "name": "bc1nez",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "01101"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(ft!=0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "beq",
      "type": "Conditional bifurcation",
      "co": "000100",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "beq,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "beq $reg1 $reg2 off",
      "fields": [
        {
          "name": "beq",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(reg1 == reg2){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bgez",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F3",
      "signature": "bgez,$INT-Reg,inm",
      "signatureRaw": "bgez $rs off",
      "co": "000001",
      "cop": "00001",
      "nwords": 1,
      "fields": [
        {
          "name": "bgez",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 20,
          "stopbit": 16,
          "valueField": "00001"
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if((rs >> 0) >= 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bgezal",
      "type": "Function call",
      "signature_definition": "F0 $F1 F3",
      "signature": "bgezal,$INT-Reg,inm",
      "signatureRaw": "bgezal $rs off",
      "co": "000001",
      "cop": "10001",
      "nwords": 1,
      "fields": [
        {
          "name": "bgezal",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 20,
          "stopbit": 16,
          "valueField": "10001"
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "ra=PC+8; if(rs>=0){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bgtz",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F2",
      "signature": "bgtz,$INT-Reg,inm",
      "signatureRaw": "bgtz $rs off",
      "co": "000111",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "bgtz",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(rs >> 0 > 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "blez",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F2",
      "signature": "blez,$INT-Reg,inm",
      "signatureRaw": "blez $rs off",
      "co": "000110",
      "cop": null,
      "nwords": 1,
      "fields": [
        {
          "name": "bgez",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(rs >> 0 <= 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bltz",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 $F1 F3",
      "signature": "bltz,$INT-Reg,inm",
      "signatureRaw": "bltz $rs off",
      "co": "000001",
      "cop": "00000",
      "nwords": 1,
      "fields": [
        {
          "name": "bltz",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 20,
          "stopbit": 16,
          "valueField": "00000"
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(rs >> 0 < 0) {PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "bne",
      "type": "Conditional bifurcation",
      "co": "000101",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "bne,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "bne $reg1 $reg2 off",
      "fields": [
        {
          "name": "bne",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if(reg1 != reg2){PC=PC+((off << 16) >> 14)}"
    },
    {
      "name": "cvt.d.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "cvt.d.s,$DFP-Reg,$SFP-Reg",
      "signatureRaw": "cvt.d.s $fd $fs",
      "co": "010001",
      "cop": "00000100001",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.d.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cvt.d",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100001"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "cvt.s.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "cvt.s.d,$SFP-Reg,$DFP-Reg",
      "signatureRaw": "cvt.s.d $fd $fs",
      "co": "010001",
      "cop": "00001100000",
      "nwords": 1,
      "fields": [
        {
          "name": "cvt.s.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cvt.s",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100000"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "div",
      "type": "Arithmetic integer",
      "co": "000000",
      "cop": "011010",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2",
      "signature": "div,$INT-Reg,$INT-Reg",
      "signatureRaw": "div $rs $rt",
      "fields": [
        {
          "name": "div",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011010"
        }
      ],
      "definition": "HI = (rs >> 0) % (rt >> 0);\nvar cociente = ((rs >> 0) / (rt >> 0));\nif (cociente < 0) {\n    LO = Math.ceil(cociente);\n} else {\n    LO = Math.floor(cociente);\n}\n"
    },
    {
      "name": "div.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "div.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "div.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000011",
      "nwords": 1,
      "fields": [
        {
          "name": "div.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26,
          "valueField": "010001"
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "div",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000011"
        }
      ],
      "definition": "fd = fs / ft"
    },
    {
      "name": "div.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "div.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "div.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000011",
      "nwords": 1,
      "fields": [
        {
          "name": "div.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26,
          "valueField": "010001"
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "div",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000011"
        }
      ],
      "definition": "fd = fs / ft"
    },
    {
      "name": "divu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F1 $F2",
      "signature": "divu,$INT-Reg,$INT-Reg",
      "signatureRaw": "divu $rs $rt",
      "co": "000000",
      "cop": "011011",
      "nwords": 1,
      "fields": [
        {
          "name": "divu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "divu",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011011"
        }
      ],
      "definition": "LO = Math.floor((rs >>> 0) / (rt >>> 0));\nHI = (rs >>> 0) % (rt >>> 0);"
    },
    {
      "name": "j",
      "type": "Unconditional bifurcation",
      "signature_definition": "F0 F1",
      "signature": "j,inm",
      "signatureRaw": "j addr",
      "co": "000010",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "j",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "addr",
          "type": "inm",
          "startbit": 25,
          "stopbit": 0
        }
      ],
      "definition": "PC=addr"
    },
    {
      "name": "jal",
      "type": "Function call",
      "signature_definition": "F0 F1",
      "signature": "jal,inm",
      "signatureRaw": "jal addr",
      "co": "000011",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "jal",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "addr",
          "type": "inm",
          "startbit": 25,
          "stopbit": 0
        }
      ],
      "definition": "ra=PC+4\nPC=addr"
    },
    {
      "name": "jalr",
      "type": "Function call",
      "signature_definition": "F0 $F2 $F1",
      "signature": "jalr,$INT-Reg,$INT-Reg",
      "signatureRaw": "jalr $rd $rs",
      "co": "000000",
      "cop": "001001",
      "nwords": 1,
      "fields": [
        {
          "name": "jalr",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "jalr",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "001001"
        }
      ],
      "definition": "rd=PC+4\nPC=rs\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "jr",
      "type": "Unconditional bifurcation",
      "signature_definition": "F0 $F1",
      "signature": "jr,$INT-Reg",
      "signatureRaw": "jr $rs",
      "co": "000000",
      "cop": "001000",
      "nwords": 1,
      "fields": [
        {
          "name": "jr",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "jr",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "001000"
        }
      ],
      "definition": "PC=rs"
    },
    {
      "name": "lb",
      "type": "Memory access",
      "co": "100000",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "lb,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "lb $reg1 val ($reg2)",
      "fields": [
        {
          "name": "lb",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "reg1=MP.b.[val+reg2];\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lbu",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "lbu,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "lbu $rt off ($base)",
      "co": "100100",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "lbu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26

        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "rt=(MP.b.[base+off] >>> 0);\ncheck_stack_limit(rt.name; sp.name; rt);"
    },
    {
      "name": "lh",
      "type": "Memory access",
      "co": "100001",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "lh,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "lh $reg1 val ($reg2)",
      "fields": [
        {
          "name": "lh",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "assert((val+reg2)%2==0; 'The memory must be align')\nreg1=MP.h.[val+reg2];\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lhu",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "lhu,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "lhu $rt off ($base)",
      "co": "100101",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "lhu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "rt=(MP.h.[base+off] >>> 0);\ncheck_stack_limit(rt.name; sp.name; rt);"
    },
    {
      "name": "lui",
      "type": "Other",
      "co": "001111",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 F2",
      "signature": "lui,$INT-Reg,inm",
      "signatureRaw": "lui $reg1 val",
      "fields": [
        {
          "name": "lui",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg1=val<<16;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lw",
      "type": "Memory access",
      "co": "100011",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "lw,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "lw $reg1 val ($reg2)",
      "fields": [
        {
          "name": "lw",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "assert((val+reg2)%4==0; 'The memory must be align')\nreg1=MP.w.[val+reg2];\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "lwc1",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "lwc1,$SFP-Reg,inm,($INT-Reg)",
      "signatureRaw": "lwc1 $ft off ($base)",
      "co": "110001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "lwc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Uint32Array(buf))[0] = MP.w.[base+off];\nft = (new Float32Array(buf))[0];"
    },
    {
      "name": "mfc1",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F2 $F3",
      "signature": "mfc1,$INT-Reg,$SFP-Reg",
      "signatureRaw": "mfc1 $rt $fs",
      "co": "010001",
      "cop": "11111",
      "nwords": 1,
      "fields": [
        {
          "name": "mfc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "mf",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "11111"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Float32Array(buf))[0] = fs;\nrt = (new Uint32Array(buf))[0];\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "mfhi",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mfhi,$INT-Reg",
      "signatureRaw": "mfhi $rd",
      "co": "000000",
      "cop": "010000",
      "nwords": 1,
      "fields": [
        {
          "name": "mfhi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010000"
        }
      ],
      "definition": "rd=HI;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "mflo",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mflo,$INT-Reg",
      "signatureRaw": "mflo $rd",
      "co": "000000",
      "cop": "010010",
      "nwords": 1,
      "fields": [
        {
          "name": "mflo",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010010"
        }
      ],
      "definition": "rd=LO;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "mod",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "mod,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "mod $rd $rs $rt",
      "co": "000000",
      "cop": "00011011010",
      "nwords": 1,
      "fields": [
        {
          "name": "mod",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "mod+sop32",
          "type": "cop",
          "startbit": 10,
          "stopbit": 0,
          "valueField": "00011011010"
        }
      ],
      "definition": "rd = (rs >> 0) % (rt >> 0);\ncheck_stack_limit(rd.name; sp.name; rd)"
    },
    {
      "name": "modu",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "modu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "modu $rd $rs $rt",
      "co": "000000",
      "cop": "00011011011",
      "nwords": 1,
      "fields": [
        {
          "name": "modu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "modu+sop33",
          "type": "cop",
          "startbit": 10,
          "stopbit": 0,
          "valueField": "00011011011"
        }
      ],
      "definition": "rd = (rs >>> 0) % (rt >>> 0);\ncheck_stack_limit(rd.name; sp.name; rd)"
    },
    {
      "name": "mov.s",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F3 $F2",
      "signature": "mov.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "mov.s $fd $fs",
      "co": "010001",
      "cop": "00000000110",
      "nwords": 1,
      "fields": [
        {
          "name": "mov.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "mov",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000110"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "mov.d",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F3 $F2",
      "signature": "mov.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "mov.d $fd $fs",
      "co": "010001",
      "cop": "00001000110",
      "nwords": 1,
      "fields": [
        {
          "name": "mov.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "mov",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000110"
        }
      ],
      "definition": "fd = fs"
    },
    {
      "name": "mtc1",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F2 $F3",
      "signature": "mtc1,$INT-Reg,$SFP-Reg",
      "signatureRaw": "mtc1 $rt $fs",
      "co": "010001",
      "cop": "00100",
      "nwords": 1,
      "fields": [
        {
          "name": "mtc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "mt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00100"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Uint32Array(buf))[0] = rt;\nfs = (new Float32Array(buf))[0];"
    },
    {
      "name": "mthi",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mthi,$INT-Reg",
      "signatureRaw": "mthi $rs",
      "co": "000000",
      "cop": "010001",
      "nwords": 1,
      "fields": [
        {
          "name": "mthi",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010001"
        }
      ],
      "definition": "HI=rs"
    },
    {
      "name": "mtlo",
      "type": "Transfer between registers",
      "signature_definition": "F0 $F1",
      "signature": "mtlo,$INT-Reg",
      "signatureRaw": "mtlo $rs",
      "co": "000000",
      "cop": "010011",
      "nwords": 1,
      "fields": [
        {
          "name": "mtlo",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010011"
        }
      ],
      "definition": "LO=rs"
    },
    {
      "name": "mul",
      "type": "Arithmetic integer",
      "co": "011100",
      "cop": "000010",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "mul,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "mul $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "mul",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "reg1=reg2*reg3;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "mul.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "mul.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "mul.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000010",
      "nwords": 1,
      "fields": [
        {
          "name": "mul.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "mul",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "fd = fs * ft"
    },
    {
      "name": "mul.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "mul.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "mul.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000010",
      "nwords": 1,
      "fields": [
        {
          "name": "mul.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "mul",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "fd = fs * ft"
    },
    {
      "name": "mult",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1",
      "signature": "mult,$INT-Reg,$INT-Reg",
      "signatureRaw": "mult $rt $rs",
      "co": "000000",
      "cop": "011000",
      "nwords": 1,
      "fields": [
        {
          "name": "mult",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "mult",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011000"
        }
      ],
      "definition": "var result = rs >> 0 * rt >> 0\nHI=Math.floor(result / Math.pow (2, 32)) >>> 0\nLO=result % Math.pow(2, 32) >>> 0"
    },
    {
      "name": "multu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1",
      "signature": "multu,$INT-Reg,$INT-Reg",
      "signatureRaw": "multu $rt $rs",
      "co": "000000",
      "cop": "011001",
      "nwords": 1,
      "fields": [
        {
          "name": "multu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "multu",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011001"
        }
      ],
      "definition": "var result = rs >>> 0 * rt >>> 0;\nHI = Math.floor(result / Math.pow(2, 32)) >>> 0;\nLO= result % Math.pow(2, 32) >>> 0;"
    },
    {
      "name": "nop",
      "type": "Logic",
      "co": "000000",
      "cop": "000000",
      "nwords": 1,
      "signature_definition": "F0",
      "signature": "nop",
      "signatureRaw": "nop",
      "fields": [
        {
          "name": "nop",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000000"
        }
      ],
      "definition": ""
    },
    {
      "name": "nor",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "nor,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "nor $rd $rs $rt",
      "co": "000000",
      "cop": "101111",
      "nwords": 1,
      "fields": [
        {
          "name": "nor",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "101111"
        }
      ],
      "definition": "rd = (~ (rs | rt));\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "or",
      "type": "Logic",
      "co": "000000",
      "cop": "100101",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "or,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "or $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "or",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100101"
        }
      ],
      "definition": "reg1=reg2|reg3;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "ori",
      "type": "Logic",
      "co": "001101",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "ori,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "ori $reg1 $reg2 val",
      "fields": [
        {
          "name": "ori",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg1=reg2|val;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "rotr",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F2 F4",
      "signature": "rotr,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "rotr $rd $rt sa",
      "co": "000000",
      "cop": "1000010",
      "nwords": 1,
      "fields": [
        {
          "name": "rotr",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "r",
          "type": "cop",
          "startbit": 21,
          "stopbit": 21,
          "valueField": "1"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "srl",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "rd = (((rt >>> sa) | (rt << (32 - sa))) >>> 0);\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "rsqrt.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "rsqrt.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "rsqrt.s $fd $fs",
      "co": "010001",
      "cop": "00000010110",
      "nwords": 1,
      "fields": [
        {
          "name": "rsqrt.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "rsqrt",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010110"
        }
      ],
      "definition": "fd = 1.0/Math.sqrt(fs)"
    },
    {
      "name": "rsqrt.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "rsqrt.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "rsqrt.d $fd $fs",
      "co": "010001",
      "cop": "00001010110",
      "nwords": 1,
      "fields": [
        {
          "name": "rsqrt.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "rsqrt",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "010110"
        }
      ],
      "definition": "fd = 1.0/Math.sqrt(fs)"
    },
    {
      "name": "sb",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "sb,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "sb $rt off ($base)",
      "co": "101000",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "sb",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "MP.b.[off+base]=rt"
    },
    {
      "name": "sh",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "sh,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "sh $rt off ($base)",
      "co": "101001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "sh",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "assert((off+base)%2==0; 'The memory must be align')\nMP.h.[off+base]=rt;"
    },
    {
      "name": "sll",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "sll,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "sll $rd $rt sa",
      "co": "000000",
      "cop": "111111",
      "nwords": 1,
      "fields": [
        {
          "name": "sll",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "111111"
        }
      ],
      "definition": "rd = (rt << sa) >>> 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "slt",
      "type": "Logic",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "slt,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "slt $rd $rs $rt",
      "co": "000000",
      "cop": "101010",
      "nwords": 1,
      "fields": [
        {
          "name": "slt",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "101010"
        }
      ],
      "definition": "rd = (rs >> 0) < (rt >> 0) ? 1 : 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "slti",
      "type": "Logic",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "slti,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "slti $rs $rt inm",
      "co": "001010",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "slti",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "inm",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "rt = (rs >> 0) < (inm >> 0) ? 1 : 0;\ncheck_stack_limit(rt.name; sp.name; rt);"
    },
    {
      "name": "sqrt.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "sqrt.s,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "sqrt.s $fd $fs",
      "co": "010001",
      "cop": "00000000100",
      "nwords": 1,
      "fields": [
        {
          "name": "sqrt.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "sqrt",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000100"
        }
      ],
      "definition": "fd = Math.sqrt(fs)"
    },
    {
      "name": "sqrt.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F3 $F2",
      "signature": "sqrt.d,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "sqrt.d $fd $fs",
      "co": "010001",
      "cop": "00001000100",
      "nwords": 1,
      "fields": [
        {
          "name": "sqrt.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "sqrt",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000100"
        }
      ],
      "definition": "fd = Math.sqrt(fs)"
    },
    {
      "name": "sra",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F2 $F1 F3",
      "signature": "sra,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "sra $rd $rt sa",
      "co": "000000",
      "cop": "000011",
      "nwords": 1,
      "fields": [
        {
          "name": "sra",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000011"
        }
      ],
      "definition": "rd = (rt >> sa) >>> 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "srl",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F2 F4",
      "signature": "srl,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "srl $rd $rt sa",
      "co": "000000",
      "cop": "0000010",
      "nwords": 1,
      "fields": [
        {
          "name": "srl",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "r",
          "type": "cop",
          "startbit": 21,
          "stopbit": 21,
          "valueField": "0"
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "sa",
          "type": "inm",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000010"
        }
      ],
      "definition": "rd = rt >>> sa;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "sub",
      "type": "Arithmetic integer",
      "co": "000000",
      "cop": "100010",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "sub,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "sub $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "sub",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100010"
        }
      ],
      "definition": "reg1=((reg2 >> 0) - (reg3 >> 0)) >>> 0;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "sub.s",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "sub.s,$SFP-Reg,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "sub.s $fd $fs $ft",
      "co": "010001",
      "cop": "00000000001",
      "nwords": 1,
      "fields": [
        {
          "name": "sub.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "SFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "sub",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000001"
        }
      ],
      "definition": "fd = fs - ft"
    },
    {
      "name": "sub.d",
      "type": "Arithmetic floating point",
      "signature_definition": "F0 $F4 $F3 $F2",
      "signature": "sub.d,$DFP-Reg,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "sub.d $fd $fs $ft",
      "co": "010001",
      "cop": "00001000001",
      "nwords": 1,
      "fields": [
        {
          "name": "sub.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "fd",
          "type": "DFP-Reg",
          "startbit": 10,
          "stopbit": 6
        },
        {
          "name": "sub",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "000001"
        }
      ],
      "definition": "fd = fs - ft"
    },
    {
      "name": "subu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "subu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "subu $rd $rs $rt",
      "co": "000000",
      "cop": "100011",
      "nwords": 1,
      "fields": [
        {
          "name": "subu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100011"
        }
      ],
      "definition": "rd = ((rs >>> 0) - (rt >>> 0)) >>> 0;\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "sw",
      "type": "Memory access",
      "co": "101011",
      "cop": "",
      "nwords": 1,
      "signature_definition": "F0 $F1 F2 ($F3)",
      "signature": "sw,$INT-Reg,inm,($INT-Reg)",
      "signatureRaw": "sw $reg1 val ($reg2)",
      "fields": [
        {
          "name": "sw",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        }
      ],
      "definition": "assert((val+reg2)%4==0; 'The memory must be align')\nMP.w.[val+reg2]=reg1"
    },
    {
      "name": "swc1",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "swc1,$SFP-Reg,inm,($INT-Reg)",
      "signatureRaw": "swc1 $ft off ($base)",
      "co": "111001",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "swc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "var buf = new ArrayBuffer(4);\n(new Float32Array(buf))[0] = ft;\nMP.w.[base+off] = (new Uint32Array(buf))[0];"
    },
    {
      "name": "xor",
      "type": "Logic",
      "co": "000000",
      "cop": "100110",
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 $F3",
      "signature": "xor,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "xor $reg1 $reg2 $reg3",
      "fields": [
        {
          "name": "xor",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "reg3",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "100110"
        }
      ],
      "definition": "reg1=reg2^reg3;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "xori",
      "type": "Logic",
      "co": "001110",
      "cop": null,
      "nwords": 1,
      "signature_definition": "F0 $F1 $F2 F3",
      "signature": "xori,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "xori $reg1 $reg2 val",
      "fields": [
        {
          "name": "xori",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "reg1=reg2^val;\ncheck_stack_limit(reg1.name; sp.name; reg1)"
    },
    {
      "name": "syscall",
      "type": "Syscall",
      "co": "000000",
      "cop": "001100",
      "nwords": 1,
      "signature_definition": "F0",
      "signature": "syscall",
      "signatureRaw": "syscall",
      "fields": [
        {
          "name": "syscall",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "value": "001100"
        }
      ],
      "definition": "switch(v0){\ncase 1:\nprint_int(a0);\nbreak;\ncase 2:\n\nprint_float(FG12);\nbreak;\ncase 3:\nprint_double(FP12);\nbreak;\ncase 4:\nprint_string(a0);\nbreak;\ncase 5:\nread_int(v0);\nbreak;\ncase 6:\nread_float(FG0);\nbreak;\ncase 7:\nread_double(FP0);\nbreak;\ncase 8:\nread_string(a0, a1);\nbreak;\ncase 9:\nsbrk(a0, v0);\nbreak;\ncase 10:\nexit();\nbreak;\ncase 11:\nprint_char(a0);\nbreak;\ncase 12:\nread_char(v0);\nbreak;\n}"
    },
    {
      "name": "div",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "div,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "div $rd $rs $rt",
      "co": "000000",
      "cop": "00010011010",
      "nwords": 1,
      "fields": [
        {
          "name": "div",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 10,
          "stopbit": 6,
          "valueField": "00010"
        },
        {
          "name": "sop32",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011010"
        }
      ],
      "definition": "var cociente = ((rs >> 0) / (rt >> 0));\nif (cociente < 0) {\n    rd = Math.ceil(cociente);\n} else {\n    rd = Math.floor(cociente);\n}\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "divu",
      "type": "Arithmetic integer",
      "signature_definition": "F0 $F3 $F1 $F2",
      "signature": "divu,$INT-Reg,$INT-Reg,$INT-Reg",
      "signatureRaw": "divu $rd $rs $rt",
      "co": "000000",
      "cop": "00010011011",
      "nwords": 1,
      "fields": [
        {
          "name": "divu",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "rt",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 10,
          "stopbit": 6,
          "valueField": "00010"
        },
        {
          "name": "sop33",
          "type": "cop",
          "startbit": 5,
          "stopbit": 0,
          "valueField": "011011"
        }
      ],
      "definition": "rd = Math.floor((rs >>> 0) / (rt >>> 0));\ncheck_stack_limit(rd.name; sp.name; rd);"
    },
    {
      "name": "ldc1",
      "type": "Memory access",
      "signature_definition": "F0 $F2 F3 ($F1)",
      "signature": "ldc1,$DFP-Reg,inm,($INT-Reg)",
      "signatureRaw": "ldc1 $ft off ($base)",
      "co": "110101",
      "cop": "",
      "nwords": 1,
      "fields": [
        {
          "name": "ldc1",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "base",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "assert((base+off)%8==0; \"The memory must be aligned\");\nvar buf = new ArrayBuffer(8);\nvar arr = (new Uint32Array(buf));\narr[0] =  MP.w.(off+base);\narr[1] =  MP.w.(off+4+base)\nft = (new Float64Array(buf))[0];"
    },
    {
      "name": "c.f.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.f.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.f.s cc $fs $ft",
      "co": "010001",
      "cop": "000000000",
      "nwords": 1,
      "fields": [
        {
          "name": "c.f.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0000"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | 0 | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.f.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.f.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.f.d cc $fs $ft",
      "co": "010001",
      "cop": "000010000",
      "nwords": 1,
      "fields": [
        {
          "name": "c.f.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0000"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | 0 | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.un.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.un.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.un.s cc $fs $ft",
      "co": "010001",
      "cop": "000000001",
      "nwords": 1,
      "fields": [
        {
          "name": "c.un.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0001"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(ft) || isNaN(fs)) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.un.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.un.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.un.d cc $fs $ft",
      "co": "010001",
      "cop": "000010001",
      "nwords": 1,
      "fields": [
        {
          "name": "c.un.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0001"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(ft) || isNaN(fs)) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.eq.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.eq.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.eq.s cc $fs $ft",
      "co": "010001",
      "cop": "000000010",
      "nwords": 1,
      "fields": [
        {
          "name": "c.eq.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0010"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (ft == fs) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.eq.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.eq.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.eq.d cc $fs $ft",
      "co": "010001",
      "cop": "000010010",
      "nwords": 1,
      "fields": [
        {
          "name": "c.eq.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0010"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (ft == fs) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ueq.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ueq.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.ueq.s cc $fs $ft",
      "co": "010001",
      "cop": "000000011",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ueq.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0011"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(ft) || isNaN(fs) || ft == fs) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ueq.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ueq.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.ueq.d cc $fs $ft",
      "co": "010001",
      "cop": "000010011",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ueq.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0011"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(ft) || isNaN(fs) || ft == fs) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.olt.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.olt.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.olt.s cc $fs $ft",
      "co": "010001",
      "cop": "000000100",
      "nwords": 1,
      "fields": [
        {
          "name": "c.olt.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0100"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs < ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.olt.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.olt.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.olt.d cc $fs $ft",
      "co": "010001",
      "cop": "000010100",
      "nwords": 1,
      "fields": [
        {
          "name": "c.olt.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0100"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs < ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ult.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ult.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.ult.s cc $fs $ft",
      "co": "010001",
      "cop": "000000101",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ult.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0101"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(fs) || isNaN(ft) || fs < ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ult.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ult.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.ult.d cc $fs $ft",
      "co": "010001",
      "cop": "000010101",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ult.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0101"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(fs) || isNaN(ft) || fs < ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ole.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ole.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.ole.s cc $fs $ft",
      "co": "010001",
      "cop": "000000110",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ole.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0110"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs <= ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ole.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ole.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.ole.d cc $fs $ft",
      "co": "010001",
      "cop": "000010110",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ole.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0110"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (fs <= ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ule.s",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ule.s,inm,$SFP-Reg,$SFP-Reg",
      "signatureRaw": "c.ule.s cc $fs $ft",
      "co": "010001",
      "cop": "000000111",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ule.s",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00000"
        },
        {
          "name": "ft",
          "type": "SFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "SFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0111"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(fs) || isNaN(ft) || fs <= ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "c.ule.d",
      "type": "Logic",
      "signature_definition": "F0 F4 $F3 $F2",
      "signature": "c.ule.d,inm,$DFP-Reg,$DFP-Reg",
      "signatureRaw": "c.ule.d cc $fs $ft",
      "co": "010001",
      "cop": "000010111",
      "nwords": 1,
      "fields": [
        {
          "name": "c.ule.d",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "fmt",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "00001"
        },
        {
          "name": "ft",
          "type": "DFP-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "fs",
          "type": "DFP-Reg",
          "startbit": 15,
          "stopbit": 11
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 10,
          "stopbit": 8
        },
        {
          "name": "cond",
          "type": "cop",
          "startbit": 3,
          "stopbit": 0,
          "valueField": "0111"
        }
      ],
      "definition": "var off = cc >>> 0;\nif (off != 0) {\n    off = off +1;\n}\nvar condition = (isNaN(fs) || isNaN(ft) || fs <= ft) ? 1 : 0;\nFCSR = (FCSR & ((24 + off) >= 32 ? 0 : (-1 << (24 + off)))) | (condition << (23+off)) | (FCSR & (-1 >>> (9 - off)));"
    },
    {
      "name": "bc1f",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 F2 F3",
      "signature": "bc1f,inm,inm",
      "signatureRaw": "bc1f cc off",
      "co": "010001",
      "cop": "0100000",
      "nwords": 1,
      "fields": [
        {
          "name": "bc1f",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "01000"
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 20,
          "stopbit": 18
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        },
        {
          "name": "ndtf",
          "type": "cop",
          "startbit": 17,
          "stopbit": 16,
          "valueField": "00"
        }
      ],
      "definition": "if ((FCSR & (1 << ((cc == 0 ? 0 : cc+1) + 23))) == 0) {\n    PC=PC+((off << 16) >> 14)\n}"
    },
    {
      "name": "bc1t",
      "type": "Conditional bifurcation",
      "signature_definition": "F0 F2 F4",
      "signature": "bc1t,inm,inm",
      "signatureRaw": "bc1t cc off",
      "co": "010001",
      "cop": "0100001",
      "nwords": 1,
      "fields": [
        {
          "name": "bc1t",
          "type": "co",
          "startbit": 31,
          "stopbit": 26
        },
        {
          "name": "cop",
          "type": "cop",
          "startbit": 25,
          "stopbit": 21,
          "valueField": "01000"
        },
        {
          "name": "cc",
          "type": "inm",
          "startbit": 20,
          "stopbit": 18
        },
        {
          "name": "ndtf",
          "type": "cop",
          "startbit": 17,
          "stopbit": 16,
          "valueField": "01"
        },
        {
          "name": "off",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "if ((FCSR & (1 << ((cc == 0 ? 0 : cc+1) + 23))) != 0) {\n    PC=PC+((off << 16) >> 14)\n}"
    }
  ],
  "pseudoinstructions": [
    {
      "name": "move",
      "nwords": 1,
      "signature_definition": "move $F0 $F1",
      "signature": "move,$INT-Reg,$INT-Reg",
      "signatureRaw": "move $reg1 $reg2",
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        }
      ],
      "definition": "add $reg1 $r0 $reg2;"
    },
    {
      "name": "addi",
      "nwords": 1,
      "signature_definition": "addi $F0 $F1 F2",
      "signature": "addi,$INT-Reg,$INT-Reg,inm",
      "signatureRaw": "addi $reg1 $reg2 val",
      "fields": [
        {
          "name": "reg1",
          "type": "INT-Reg",
          "startbit": 25,
          "stopbit": 21
        },
        {
          "name": "reg2",
          "type": "INT-Reg",
          "startbit": 20,
          "stopbit": 16
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": 15,
          "stopbit": 0
        }
      ],
      "definition": "lui $at Field.3.(31,16);\nori $at $at Field.3.(15,0);\nadd $reg1 $reg2 $at;"
    },
    {
      "name": "jalr",
      "signature_definition": "jalr $F0",
      "signature": "jalr,$INT-Reg",
      "signatureRaw": "jalr $rs",
      "nwords": 1,
      "fields": [
        {
          "name": "rs",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "16"
        }
      ],
      "definition": "jalr $rs $ra;"
    },
    {
      "name": "li",
      "signature_definition": "li $F0 F1",
      "signature": "li,$INT-Reg,inm",
      "signatureRaw": "li $rd val",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "val",
          "type": "inm",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "if(Field.2.SIZE<=16){addi $rd $r0 val;}\nelse{lui $at Field.2.(31,16);\nori $at $at Field.2.(15,0);\nadd $rd $rd $at;}"
    },
    {
      "name": "la",
      "signature_definition": "ls $F0 F1",
      "signature": "ls,$INT-Reg,inm",
      "signatureRaw": "ls $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm",
          "startbit": "20",
          "stopbit": "0"
        }
      ],
      "definition": "lui $at Field.2.(31,16);\nori $at $at Field.2.(15,0);\nadd $rd $rd $at;"
    },
    {
      "name": "lw",
      "signature_definition": "lw $F0 F1",
      "signature": "lw,$INT-Reg,inm",
      "signatureRaw": "lw $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "lui $at Field.2.(31,16);\nori $at $at Field.2.(15,0);\nlw $rd 0 ($at);"
    },
    {
      "name": "lh",
      "signature_definition": "lh $F0 F1",
      "signature": "lh,$INT-Reg,inm",
      "signatureRaw": "lh $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "lui $at Field.2.(31,16);\nori $at $at Field.2.(15,0);\nlh $rd 0 ($at);"
    },
    {
      "name": "lb",
      "signature_definition": "lb $F0 F1",
      "signature": "lb,$INT-Reg,inm",
      "signatureRaw": "lb $rd addr",
      "nwords": 1,
      "fields": [
        {
          "name": "rd",
          "type": "INT-Reg",
          "startbit": "25",
          "stopbit": "21"
        },
        {
          "name": "addr",
          "type": "inm",
          "startbit": "15",
          "stopbit": "0"
        }
      ],
      "definition": "lui $at Field.2.(31,16);\nori $at $at Field.2.(15,0);\nlb $rd 0 ($at);"
    }
  ],
  "directives": [
    {
      "name": ".data",
      "action": "data_segment",
      "size": null
    },
    {
      "name": ".text",
      "action": "code_segment",
      "size": null
    },
    {
      "name": ".globl",
      "action": "global_symbol",
      "size": null
    },
    {
      "name": ".byte",
      "action": "byte",
      "size": 1
    },
    {
      "name": ".half",
      "action": "half_word",
      "size": 2
    },
    {
      "name": ".word",
      "action": "word",
      "size": 4
    },
    {
      "name": ".doubleword",
      "action": "double_word",
      "size": 8
    },
    {
      "name": ".float",
      "action": "float",
      "size": 4
    },
    {
      "name": ".double",
      "action": "double",
      "size": 8
    },
    {
      "name": ".space",
      "action": "space",
      "size": 1
    },
    {
      "name": ".ascii",
      "action": "ascii_not_null_end",
      "size": null
    },
    {
      "name": ".asciiz",
      "action": "ascii_null_end",
      "size": null
    },
    {
      "name": ".align",
      "action": "align",
      "size": null
    }
  ],
  "memory_layout": [
    {
      "name": "text start",
      "value": 0
    },
    {
      "name": "text end",
      "value": 2097151
    },
    {
      "name": "data start",
      "value": 2097152
    },
    {
      "name": "data end",
      "value": 96206015
    },
    {
      "name": "stack start",
      "value": 268435452
    },
    {
      "name": "stack end",
      "value": 268435455
    }
  ]
}
